name: cine-scan-connect

services:
  videoclub:
    image: dambuty/lazone-videotek:latest
  # Application principale
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ../.env

    volumes:
      - /data/movies:/movies:ro # Montage en lecture seule des films
      - ./logs:/app/logs # Montage des logs
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cine-scan.rule=Host(`films.votre-domaine.com`)"
      - "traefik.http.routers.cine-scan.entrypoints=websecure"
      - "traefik.http.routers.cine-scan.tls.certresolver=letsencrypt"
      - "traefik.http.services.cine-scan.loadbalancer.server.port=3001"
    networks:
      - traefik-network
      - internal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Base de données PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: cinescan
      POSTGRES_USER: cinescan_user
      POSTGRES_PASSWORD: change_this_password_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432" # À retirer en production pour la sécurité
    networks:
      - internal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cinescan_user -d cinescan"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  traefik-network:
    external: true
  internal-network:
    driver: bridge
